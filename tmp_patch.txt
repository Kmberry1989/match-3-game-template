*** Begin Patch
*** Update File: Scripts/PlayerManager.gd
@@
-signal level_up(new_level)
+signal level_up(new_level)
+signal coins_changed(new_amount)
@@
 var player_uid = ""
 var player_data = {
@@
 	"current_level": 1,
 	"current_xp": 0,
+	"coins": 0,
@@
 }
@@
-func get_xp_for_next_level():
-	return 100 * player_data["current_level"]
+const BASE_XP := 100
+const XP_GROWTH := 1.25 # multiplicative growth per level
+const COIN_CONVERSION_RATE := 50 # XP per 1 coin awarded at level-up
+
+func get_xp_for_level(level: int) -> int:
+	return int(round(BASE_XP * pow(XP_GROWTH, max(level - 1, 0))))
+
+func get_xp_for_next_level():
+	return get_xp_for_level(player_data["current_level"]) 
@@
-func add_xp(amount):
-	player_data["current_xp"] += amount
-	while player_data["current_xp"] >= get_xp_for_next_level():
-		player_data["current_xp"] -= get_xp_for_next_level()
-		player_data["current_level"] += 1
-		emit_signal("level_up", player_data["current_level"])
-	save_player_data()
+func add_xp(amount):
+	player_data["current_xp"] += amount
+	var leveled := false
+	while player_data["current_xp"] >= get_xp_for_next_level():
+		var threshold := get_xp_for_next_level()
+		player_data["current_xp"] -= threshold
+		player_data["current_level"] += 1
+		# Convert part of the stage XP into coins at each level-up
+		var coins_awarded := int(floor(threshold / COIN_CONVERSION_RATE))
+		if coins_awarded > 0:
+			player_data["coins"] += coins_awarded
+			emit_signal("coins_changed", player_data["coins"])
+		leveled = true
+		emit_signal("level_up", player_data["current_level"])
+	if leveled:
+		save_player_data()
@@
 func update_best_combo(new_combo):
@@
 func add_lines_cleared(lines):
@@
+func get_coins():
+	return player_data.get("coins", 0)
+
+func can_spend(amount):
+	return get_coins() >= amount
+
+func spend_coins(amount):
+	if not can_spend(amount):
+		return false
+	player_data["coins"] -= amount
+	emit_signal("coins_changed", player_data["coins"])
+	save_player_data()
+	return true
*** End Patch
